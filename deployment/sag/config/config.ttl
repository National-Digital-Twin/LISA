PREFIX :        <#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>
PREFIX authz:   <http://ndtp.co.uk/security#>
PREFIX cqrs:    <http://ndtp.co.uk/cqrs#>
PREFIX graphql: <https://ndtp.co.uk/fuseki/modules/graphql#>
## ---- Fuseki-Kafka connector
PREFIX fk:      <http://jena.apache.org/fuseki/kafka#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>

[] rdf:type fuseki:Server ;
   ## Disable SERVICE (call out) in SPARQL.
   ja:context [  ja:cxtName "arq:httpServiceAllowed" ; ja:cxtValue "false" ] ;
   ## Data services enabled.
   fuseki:services (
     :knowledgeService
   ) .

## --------

:knowledgeService rdf:type fuseki:Service ;
    # http://host:port/knowledge
    fuseki:name "/knowledge" ;

    fuseki:endpoint [
        # SPARQL query service on "/knowledge/sparql"
        fuseki:operation fuseki:query ;
        fuseki:name "sparql" ;
        ja:context [
            ja:cxtName "arq:queryTimeout" ;
            ja:cxtValue "600000,600000"
        ] ;
    ];
    fuseki:endpoint [
        # SPARQL query service on "/knowledge/query"
        fuseki:operation fuseki:query ;
        fuseki:name "query" ;
        ja:context [
            ja:cxtName "arq:queryTimeout" ;
            ja:cxtValue "600000,600000"
        ] ;
    ] ;

    ## Updates will be generate an RDF patch which is sent to the Kafka topic.
    ## This exposes update to all users and should only be applied in development environments. Pending access admin/user pools solution.
    fuseki:endpoint [
        # CQRS update service on "/knowledge/update"
        fuseki:operation cqrs:update ;
        # This name (ja:cxtValue) must agree with the connector below.
        ja:context [
            ja:cxtName "kafka:topic" ;
            ja:cxtValue "knowledge"
        ];
        fuseki:name "update"
    ];

    fuseki:endpoint [
        # GraphQL operations
        fuseki:operation graphql:graphql ;
        ja:context [
            ja:cxtName "graphql:executor" ;
            ja:cxtValue "uk.gov.dbt.ndtp.jena.graphql.execution.ianode.graph.IANodeGraphExecutor"
        ] ;
        fuseki:name "graphql"
    ];

    fuseki:endpoint [
        # SPARQL Graph Store Protocol (read) on "/knowledge/get"
        fuseki:operation fuseki:gsp-r ;
        fuseki:name "get"
    ] ;

    fuseki:endpoint [
        # Authz upload operation on "/knowledge/upload"
        fuseki:operation authz:upload ;
        fuseki:name "upload"
    ] ;

    # Knowledge dataset to use
    fuseki:dataset :datasetAuth ;
    .

## Dataset with security labels / ABAC.
## Transactional in-memory dataset.
:datasetAuth rdf:type authz:DatasetAuthz ;
    ## Config item where labels are stored (only define if not in memory)
    authz:labelsStore [ authz:labelsStorePath "/fuseki/databases/knowledgeLabels.db" ] ;
    authz:dataset :datasetAuthBase;
    authz:tripleDefaultLabels "!";

    authz:attributes <file:attribute-store.ttl>;
    .

## Storage of data on filesystem.
:datasetAuthBase rdf:type      tdb2:DatasetTDB2 ;
    tdb2:location "/fuseki/databases/knowledge";
    .

## --------

<#connector> rdf:type fk:Connector ;
    fk:bootstrapServers    "lisa-kafka:9092";
    fk:topic               "knowledge";
    ## This should refer to an authz:upload endpoint
    fk:fusekiServiceName   "/knowledge/upload";
    ## fk:replayTopic -- true for in-memory storage / false for TDB2 storage
    fk:replayTopic      false;
    fk:stateFile        "/fuseki/databases/Replay-RDF.state";
    # Additional Kafka Configuration properties are loaded from a file specified via
    # an environment variable
    # Empty default (the :} at the end) means if this variable is not set then no extra
    # properties are loaded
    fk:configFile       "/fuseki/kafka/consumer.properties"
    .

