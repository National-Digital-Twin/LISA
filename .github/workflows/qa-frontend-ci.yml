name: Playwright Tests
on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC
  workflow_dispatch: # Allows manual trigger from GitHub Actions UI
  push:
    branches:
      - develop # Triggers on new commits to the develop branch
  pull_request:
    branches:
      - develop
    paths:
      - "frontend/qa/**"
      - ".github/workflows/qa-frontend-ci.yml"
permissions:
  contents: read
  packages: read
  statuses: write # To report GitHub Actions status checks
jobs:
  test:
    name: Dependency Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, demo, preprod, production] # Define all environments
    env:
      ENVIRONMENT: ${{ matrix.environment }} # Pass environment name
      BASE_URL: ${{ secrets[format('BASE_URL_{0}', matrix.environment)] }}
      USERNAME: ${{ secrets[format('USERNAME_{0}', matrix.environment)] }}
      PASSWORD: ${{ secrets[format('PASSWORD_{0}', matrix.environment)] }}
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Fetches the code from GitHub
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"
          cache: 'npm' # Cache npm dependencies
      - name: Install dependencies
        run: npm ci # Installs dependencies from package-lock.json
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps # Ensures all browsers & dependencies are installed
      - name: Run Playwright Tests for ${{ matrix.environment }}
        run: npm run test
        env:
          CI: true # Ensures Playwright runs in CI mode
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
      - name: Upload Playwright Test Report (${{ matrix.environment }})
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.environment }}
          path: /home/vagrant/Documents/dev/LISA/frontend/qa/test-results/reports/
