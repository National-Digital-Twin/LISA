name: Frontend CI on PR

on:
  workflow_call:
  pull_request:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci-pr.yml"
      - ".github/workflows/frontend-ci-pr-merge.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  statuses: write # To report GitHub Actions status checks

jobs:
  dependencies:
    name: Dependency Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"

      - name: Install Dependencies
        run: npm ci

      - name: Check for Outdated Dependencies
        working-directory: frontend
        run: npm audit
        continue-on-error: true

  linting:
    name: Code Linting
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: dependencies
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"

      - name: Install Yarn
        run: npm ci

      - name: Run Linting
        working-directory: frontend
        run: npm run lint
        continue-on-error: true

  security-scanning:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: linting
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          scan-ref: frontend
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

  docker-build-test-scan:
    name: Yarn Build, Docker Build, Test & Scan
    runs-on: ubuntu-latest
    needs: security-scanning
    timeout-minutes: 20
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"

      - name: Install Dependencies
        run: npm ci

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm run build
          npm run bundle

      - name: list files in dist dir
        working-directory: frontend
        if: success()
        run: |
          ls -l dist/

      - name: Build Docker Image
        run: |
          docker build -t lisa/webapp:latest -f deployment/docker/Dockerfile .

      - name: Run Docker Image
        run: |
          docker images
          docker run --rm -d -p 3000:3000 --name frontend lisa/webapp:latest
          docker ps
          sleep 10
          docker logs frontend
          docker exec frontend ls -l /usr/share/nginx/html

      - name: Ping App
        run: |
          status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/)
          if [[ "$status_code" == "200" ]]; then
            echo "Ping successful (200 OK)"  >> $GITHUB_STEP_SUMMARY
          else
            echo "Ping failed with status code: $status_code"  >> $GITHUB_STEP_SUMMARY
            exit 1  # Indicate an error
          fi

      - name: Run Trivy Scan on Docker Image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "paralog/frontend:latest"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Cleanup
        if: always()
        run: docker stop frontend
